<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util-3.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd"
    default-autowire="byName">

    <context:annotation-config/>
    <context:component-scan base-package="com.buzzinate.buzzads"></context:component-scan>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations"><list>
            <value>classpath:config.properties</value>
            <value>classpath:config-test.properties</value>
            <value>file:///opt/ads/config.properties</value>
            <value>classpath:config-local.properties</value>
        </list></property>
        <property name="ignoreResourceNotFound" value="true"></property>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" >
        <property name="proxyTargetClass" value="true" />
    </bean>


    <!-- OTHERS -->
    <bean id="configurationFactory"
        class="org.apache.commons.configuration.ConfigurationFactory" >
        <property name="configurationURL" value="classpath:configuration.xml" />
    </bean>
    <bean id="configuration" factory-bean="configurationFactory" factory-method="getConfiguration" />

    <bean id="kestrelClient" class="com.buzzinate.common.util.kestrel.KestrelClient" destroy-method="shutdown">
        <constructor-arg value="${analytics.kestrel.ips}" />
        <constructor-arg value="${analytics.kestrel.pool.size}" />
    </bean>

    <bean id="redisClient" class="com.buzzinate.buzzads.core.util.RedisClient" destroy-method="shutdown" >
        <constructor-arg value="${redis.ips}" />
    </bean>

    <bean id="statisticProcessor" class="com.buzzinate.buzzads.analytics.processor.StatisticProcessor"
        init-method="start" destroy-method="stop">
    </bean>

    <bean id="statisticsUpdateDao" class="com.buzzinate.buzzads.analytics.dao.StatisticsUpdateDao" />

    <bean id="dataSource" class="org.unitils.database.UnitilsDataSourceFactoryBean" />

    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mappingLocations">
            <list>
                <value>classpath:mapping-stats/*.hbm.xml</value>
                <value>classpath:mappings-core/*.hbm.xml</value>  
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">${hibernate.showsql}</prop>
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <bean id="txAdvisor"
        class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
        <property name="transactionInterceptor" ref="txInterceptor"/>
    </bean>

    <bean id="txInterceptor"
        class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager" />
        <property name="transactionAttributeSource">
            <bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
        </property>
    </bean>

<!-- 
    <tx:annotation-driven transaction-manager="transactionManager"/> -->
    
</beans>
